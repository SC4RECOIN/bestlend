/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category InitReferrerStateAndShortUrl
 * @category generated
 */
export type InitReferrerStateAndShortUrlInstructionArgs = {
  shortUrl: string
}
/**
 * @category Instructions
 * @category InitReferrerStateAndShortUrl
 * @category generated
 */
export const initReferrerStateAndShortUrlStruct =
  new beet.FixableBeetArgsStruct<
    InitReferrerStateAndShortUrlInstructionArgs & {
      instructionDiscriminator: number[] /* size: 8 */
    }
  >(
    [
      ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
      ['shortUrl', beet.utf8String],
    ],
    'InitReferrerStateAndShortUrlInstructionArgs'
  )
/**
 * Accounts required by the _initReferrerStateAndShortUrl_ instruction
 *
 * @property [_writable_, **signer**] referrer
 * @property [_writable_] referrerState
 * @property [_writable_] referrerShortUrl
 * @property [] referrerUserMetadata
 * @category Instructions
 * @category InitReferrerStateAndShortUrl
 * @category generated
 */
export type InitReferrerStateAndShortUrlInstructionAccounts = {
  referrer: web3.PublicKey
  referrerState: web3.PublicKey
  referrerShortUrl: web3.PublicKey
  referrerUserMetadata: web3.PublicKey
  rent?: web3.PublicKey
  systemProgram?: web3.PublicKey
  anchorRemainingAccounts?: web3.AccountMeta[]
}

export const initReferrerStateAndShortUrlInstructionDiscriminator = [
  165, 19, 25, 127, 100, 55, 31, 90,
]

/**
 * Creates a _InitReferrerStateAndShortUrl_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category InitReferrerStateAndShortUrl
 * @category generated
 */
export function createInitReferrerStateAndShortUrlInstruction(
  accounts: InitReferrerStateAndShortUrlInstructionAccounts,
  args: InitReferrerStateAndShortUrlInstructionArgs,
  programId = new web3.PublicKey('HUHJsverovPJN3sVtv8J8D48fKzeajRtz3Ga4Zmh4RLA')
) {
  const [data] = initReferrerStateAndShortUrlStruct.serialize({
    instructionDiscriminator:
      initReferrerStateAndShortUrlInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.referrer,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.referrerState,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.referrerShortUrl,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.referrerUserMetadata,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.rent ?? web3.SYSVAR_RENT_PUBKEY,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  if (accounts.anchorRemainingAccounts != null) {
    for (const acc of accounts.anchorRemainingAccounts) {
      keys.push(acc)
    }
  }

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
