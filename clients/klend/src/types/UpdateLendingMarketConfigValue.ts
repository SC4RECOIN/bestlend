/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import { ElevationGroup, elevationGroupBeet } from './ElevationGroup'
/**
 * This type is used to derive the {@link UpdateLendingMarketConfigValue} type as well as the de/serializer.
 * However don't refer to it in your code but use the {@link UpdateLendingMarketConfigValue} type instead.
 *
 * @category userTypes
 * @category enums
 * @category generated
 * @private
 */
export type UpdateLendingMarketConfigValueRecord = {
  Bool: { fields: [boolean] }
  U8: { fields: [number] }
  U8Array: { fields: [number[] /* size: 8 */] }
  U16: { fields: [number] }
  U64: { fields: [beet.bignum] }
  Pubkey: { fields: [web3.PublicKey] }
  ElevationGroup: { fields: [ElevationGroup] }
}

/**
 * Union type respresenting the UpdateLendingMarketConfigValue data enum defined in Rust.
 *
 * NOTE: that it includes a `__kind` property which allows to narrow types in
 * switch/if statements.
 * Additionally `isUpdateLendingMarketConfigValue*` type guards are exposed below to narrow to a specific variant.
 *
 * @category userTypes
 * @category enums
 * @category generated
 */
export type UpdateLendingMarketConfigValue =
  beet.DataEnumKeyAsKind<UpdateLendingMarketConfigValueRecord>

export const isUpdateLendingMarketConfigValueBool = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'Bool' } =>
  x.__kind === 'Bool'
export const isUpdateLendingMarketConfigValueU8 = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'U8' } => x.__kind === 'U8'
export const isUpdateLendingMarketConfigValueU8Array = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'U8Array' } =>
  x.__kind === 'U8Array'
export const isUpdateLendingMarketConfigValueU16 = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'U16' } => x.__kind === 'U16'
export const isUpdateLendingMarketConfigValueU64 = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'U64' } => x.__kind === 'U64'
export const isUpdateLendingMarketConfigValuePubkey = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'Pubkey' } =>
  x.__kind === 'Pubkey'
export const isUpdateLendingMarketConfigValueElevationGroup = (
  x: UpdateLendingMarketConfigValue
): x is UpdateLendingMarketConfigValue & { __kind: 'ElevationGroup' } =>
  x.__kind === 'ElevationGroup'

/**
 * @category userTypes
 * @category generated
 */
export const updateLendingMarketConfigValueBeet =
  beet.dataEnum<UpdateLendingMarketConfigValueRecord>([
    [
      'Bool',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['Bool']>(
        [['fields', beet.fixedSizeTuple([beet.bool])]],
        'UpdateLendingMarketConfigValueRecord["Bool"]'
      ),
    ],
    [
      'U8',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['U8']>(
        [['fields', beet.fixedSizeTuple([beet.u8])]],
        'UpdateLendingMarketConfigValueRecord["U8"]'
      ),
    ],
    [
      'U8Array',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['U8Array']>(
        [
          [
            'fields',
            beet.fixedSizeTuple([beet.uniformFixedSizeArray(beet.u8, 8)]),
          ],
        ],
        'UpdateLendingMarketConfigValueRecord["U8Array"]'
      ),
    ],
    [
      'U16',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['U16']>(
        [['fields', beet.fixedSizeTuple([beet.u16])]],
        'UpdateLendingMarketConfigValueRecord["U16"]'
      ),
    ],
    [
      'U64',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['U64']>(
        [['fields', beet.fixedSizeTuple([beet.u64])]],
        'UpdateLendingMarketConfigValueRecord["U64"]'
      ),
    ],
    [
      'Pubkey',
      new beet.BeetArgsStruct<UpdateLendingMarketConfigValueRecord['Pubkey']>(
        [['fields', beet.fixedSizeTuple([beetSolana.publicKey])]],
        'UpdateLendingMarketConfigValueRecord["Pubkey"]'
      ),
    ],
    [
      'ElevationGroup',
      new beet.BeetArgsStruct<
        UpdateLendingMarketConfigValueRecord['ElevationGroup']
      >(
        [['fields', beet.fixedSizeTuple([elevationGroupBeet])]],
        'UpdateLendingMarketConfigValueRecord["ElevationGroup"]'
      ),
    ],
  ]) as beet.FixableBeet<
    UpdateLendingMarketConfigValue,
    UpdateLendingMarketConfigValue
  >
