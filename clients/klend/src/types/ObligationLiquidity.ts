/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beet from '@metaplex-foundation/beet'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import { BigFractionBytes, bigFractionBytesBeet } from './BigFractionBytes'
export type ObligationLiquidity = {
  borrowReserve: web3.PublicKey
  cumulativeBorrowRateBsf: BigFractionBytes
  padding: beet.bignum
  borrowedAmountSf: beet.bignum
  marketValueSf: beet.bignum
  borrowFactorAdjustedMarketValueSf: beet.bignum
  padding2: beet.bignum[] /* size: 8 */
}

/**
 * @category userTypes
 * @category generated
 */
export const obligationLiquidityBeet =
  new beet.BeetArgsStruct<ObligationLiquidity>(
    [
      ['borrowReserve', beetSolana.publicKey],
      ['cumulativeBorrowRateBsf', bigFractionBytesBeet],
      ['padding', beet.u64],
      ['borrowedAmountSf', beet.u128],
      ['marketValueSf', beet.u128],
      ['borrowFactorAdjustedMarketValueSf', beet.u128],
      ['padding2', beet.uniformFixedSizeArray(beet.u64, 8)],
    ],
    'ObligationLiquidity'
  )
